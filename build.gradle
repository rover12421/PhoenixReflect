buildscript {
    ext.kotlin_version = '1.2.21'
    ext.dokka_version = '0.9.16'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

group 'com.rover12421.phoenix'
version '1.3'

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'maven'
apply plugin: 'signing'

sourceCompatibility = 1.6
targetCompatibility = 1.6

repositories {
    mavenCentral()
    jcenter()
    maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.6"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.6"
}

def loadProperties(String sourceFileName) {
    def config = new Properties()
    def propFile = new File(sourceFileName)
    System.err.println("Loading property file: " + propFile.absolutePath)
    if (propFile.canRead()) {
        config.load(new FileInputStream(propFile))
        for (Map.Entry property in config) {
            System.out.println("setting " + property.key)
            project.ext[property.key] = property.value
        }
    }
}

loadProperties("local.properties")

tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

signing {
    required { gradle.taskGraph.hasTask('uploadArchives') }
    sign configurations.archives
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

uploadArchives {
    repositories.mavenDeployer {
        configuration = configurations.archives

        beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

        repository(url: 'https://oss.sonatype.org/service/local/staging/deploy/maven2/') {
            authentication(userName: sonatypeUsername, password: sonatypePassword)
        }

        pom.artifactId = project.name

        pom.project {
            name project.name
            description "Phoenix Reflect"
            url 'http://www.rover12421.com'
            packaging 'jar'
            licenses {
                license {
                    name 'MIT License'
                    url 'https://opensource.org/licenses/mit-license.php'
                    distribution 'repo'
                }
            }
            scm {
                url 'https://github.com/rover12421/PhoenixReflect/tree/master'
                connection 'scm:git:git://github.com/rover12421/PhoenixReflect.git'
                developerConnection 'scm:git:git@github.com:rover12421/PhoenixReflect.git'
            }
            developers {
                developer {
                    id 'rover12421'
                    name 'Rover12421'
                    email 'rover12421@163.com'
                }
            }
        }
    }
}

task release {
}

tasks.getByPath(":release").dependsOn(uploadArchives)

task Wrapper(type: Wrapper) {
    gradleVersion = '4.2'
    distributionType = Wrapper.DistributionType.ALL
}